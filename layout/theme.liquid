<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    {% # Inlined CSS Variables %}
    {% render 'css-variables' %}

    {% # Load and preload the critical CSS %}
    {{ 'output.css' | asset_url | stylesheet_tag }}

    {{ 'swiper-bundle-min.css' | asset_url | stylesheet_tag }}

    <script src="{{ 'swiper-bundle-min.js' | asset_url }}" defer></script>
    <script src="{{ 'jquery.js' | asset_url }}" defer></script>

    {% # Social, title, etc. %}
    {% render 'meta-tags' %}

    {{ content_for_header }}
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const toggle = document.getElementById('menuToggle');
        const close = document.getElementById('menuClose');
        const menu = document.getElementById('mobileMenu');
        const panel = document.getElementById('mobileMenuPanel');

        toggle.addEventListener('click', () => {
          menu.classList.remove('hidden');
          setTimeout(() => {
            panel.classList.remove('-translate-x-full');
            panel.classList.add('translate-x-0');
          }, 10);
        });

        close.addEventListener('click', () => {
          panel.classList.add('-translate-x-full');
          panel.classList.remove('translate-x-0');
          setTimeout(() => {
            menu.classList.add('hidden');
          }, 300); // match duration-300
        });

        menu.addEventListener('click', (e) => {
          if (e.target === menu) {
            panel.classList.add('-translate-x-full');
            panel.classList.remove('translate-x-0');
            setTimeout(() => {
              menu.classList.add('hidden');
            }, 300);
          }
        });
      });

      function updateCartCount() {
        fetch('/cart.js')
          .then((res) => res.json())
          .then((cart) => {
            const cartCountEl = document.getElementById('cart-count');
            if (cart.item_count > 0) {
              cartCountEl.innerText = cart.item_count;
              cartCountEl.style.display = 'inline-block';
            } else {
              cartCountEl.style.display = 'none';
            }
          });
      }

      document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.add-to-cart-btn').forEach((button) => {
          button.addEventListener('click', function () {
            const variantId = this.getAttribute('data-variant-id');

            fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                Accept: 'application/json',
              },
              body: JSON.stringify({
                id: variantId,
                quantity: 1,
              }),
            })
              .then((res) => res.json())
              .then((data) => {
                console.log('Added to cart:', data);
                updateCartCount(); // cart count update
              })
              .catch((err) => console.error(err));
          });
        });
      });

      function showToast(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed bottom-5 right-5 bg-green-600 text-white px-4 py-2 rounded shadow-lg z-50';
        toast.innerText = message;
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 3000);
      }
    </script>
  </head>

  <body>
    {%- if template != 'customers/login' and template != 'customers/register' -%}
      {% sections 'header-group' %}
    {%- endif -%}
    {{ content_for_layout }}
    {%- if template != 'customers/login' and template != 'customers/register' -%}
      {% sections 'footer-group' %}
    {%- endif -%}
  </body>
</html>
