<div id="signup-step">
  {% form 'create_customer', id: 'signup-form' %}
    <div class="register-page grid grid-cols-1 md:grid-cols-2 bg-[#1E6C44] min-h-screen">
      <div class="overflow-auto py-25 max-h-screen">
        <div class="w-full mx-auto px-5 min-w-full 2xl:min-w-164 lg:w-53.5 mb-7.5 lg:mb-9 xl:mb-11 2xl:mb-12.5">
          <a href="{{ routes.root_url }}" class="w-31.5 mb-7.5 md:mb-9 lg:mb-11 xl:mb-12.5 block mx-auto">
            <img src="{{ 'login-icon.png' | asset_url }}" width="" height="" class="size-full object-center" alt="">
          </a>
          <p class="text-white text-2xl lg:text-3xl xl:text-[32px] font-medium !leading-[1.25] font-poppins mb-1.4 lg:mb-3">
            Sign Up
          </p>
          <p class="text-[#B7D6C6] text-base md:text-lg xl:text-xl !leading-[1.6]">
            Fill your information below or register with your account.
          </p>

          {{ form.errors | default_errors }}

          <div class="flex flex-col lg:flex-row gap-4 lg:gap-5 lg:mb-5">
            <div class="w-full mb-4 md:mb-0">
              <label class="block text-white text-lg mb-2 font-medium font-poppins">First Name*</label>
              <input
                type="text"
                name="customer[first_name]"
                placeholder="Enter First Name"
                required
                class="w-full text-base text-white placeholder:text-[#B7D6C6] border border-[#B7D6C6] bg-[#2A7A51] py-4 px-5 rounded-lg focus:outline-none focus:border-[#FFC801]"
              >
            </div>
            <div class="w-full mb-4 lg:mb-0">
              <label class="block text-white text-lg mb-2 font-medium font-poppins">Last Name*</label>
              <input
                type="text"
                name="customer[last_name]"
                placeholder="Enter Last Name"
                required
                class="w-full text-base text-white placeholder:text-[#B7D6C6] border border-[#B7D6C6] bg-[#2A7A51] py-4 px-5 rounded-lg focus:outline-none focus:border-[#FFC801]"
              >
            </div>
          </div>

          <div class="w-full mb-4 lg:mb-5">
            <label class="block text-white text-lg mb-2 font-medium font-poppins">Email*</label>
            <input
              type="email"
              name="customer[email]"
              placeholder="Enter Email Address"
              required
              class="w-full text-base text-white placeholder:text-[#B7D6C6] border border-[#B7D6C6] bg-[#2A7A51] py-4 px-5 rounded-lg focus:outline-none focus:border-[#FFC801]"
            >
          </div>

          <div class="w-full mb-4 lg:mb-5">
            {% render 'password-input' %}
          </div>

          <div class="w-full mb-4 lg:mb-5">
            <button
              type="submit"
              id="signup-button"
              class="text-[#1F1904] text-base py-4 w-full cursor-pointer font-medium font-poppins text-center px-5 rounded-lg bg-[#FFC801] hover:bg-[#E6B401] transition-colors"
            >
              <span id="signup-text">Sign Up</span>
              <span id="signup-loading" class="hidden">Sending OTP...</span>
            </button>
          </div>

          <p class="text-red-500 text-center mt-2" id="signup-error"></p>

          <div class="relative z-1 mb-6 lg:mb-8">
            <div class="h-[1px] w-[35%] bg-[#B7D6C6] absolute left-0 top-1/2 -translate-y-1/2"></div>
            <div class="h-[1px] w-[35%] bg-[#B7D6C6] absolute right-0 top-1/2 -translate-y-1/2"></div>
            <p class="text-white text-base font-medium font-poppins text-center bg-[#1E6C44] px-4">Sign Up with</p>
          </div>

          <button
            type="button"
            class="text-[#1E6C44] text-base py-4 w-full flex items-center justify-center gap-2 rounded-lg bg-white hover:bg-gray-100 transition-colors"
          >
            Sign Up With Google
          </button>

          <p class="text-white text-base mt-10 text-center">
            Already have an account?
            <a href="{{ routes.account_login_url }}" class="text-[#FFC801] underline">Sign In</a>
          </p>
        </div>
      </div>

      <div class="hidden md:flex bg-[#FFC801] justify-end py-13 h-screen">
        <img class="w-full object-contain h-full" src="{{ 'login-img.png' | asset_url }}" alt="">
      </div>
    </div>
  {% endform %}
</div>

<!-- OTP Verification Step -->
<div id="verify-step" class="hidden bg-[#1E6C44] min-h-screen">
  <div class="flex items-center justify-center min-h-screen px-5">
    <div class="w-full max-w-md">
      <div class="text-center mb-8">
        <a href="{{ routes.root_url }}" class="block mx-auto mb-8">
          <img src="{{ 'login-icon.png' | asset_url }}" width="128" height="64" class="mx-auto" alt="">
        </a>
        <p class="text-white text-2xl lg:text-3xl font-medium font-poppins mb-2">Verify Code</p>
        <p class="text-[#B7D6C6] text-base mb-1">Please enter the code we sent to</p>
        <p class="text-[#FFC801] font-medium text-lg mb-8" id="verify-email"></p>
      </div>

      <div class="flex gap-3 justify-center mb-6">
        <input
          id="otp1"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
        <input
          id="otp2"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
        <input
          id="otp3"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
        <input
          id="otp4"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
        <input
          id="otp5"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
        <input
          id="otp6"
          maxlength="1"
          data-otp-digit
          class="w-12 h-12 text-center border-2 border-[#B7D6C6] rounded-lg bg-[#2A7A51] text-white text-xl font-medium focus:border-[#FFC801] focus:outline-none"
        >
      </div>

      <button
        type="button"
        id="verify-otp-button"
        class="bg-[#FFC801] text-[#1F1904] font-medium font-poppins w-full py-4 rounded-lg hover:bg-[#E6B401] transition-colors mb-4"
      >
        <span id="verify-text">Verify</span>
        <span id="verify-loading" class="hidden">Verifying...</span>
      </button>

      <p class="text-center text-white mb-4">
        Didn't receive code?
        <button type="button" id="resend-btn" class="text-[#FFC801] underline hover:text-[#E6B401] font-medium">
          Resend
        </button>
      </p>

      <p class="text-red-500 text-center" id="verify-error"></p>
      <p class="text-green-500 text-center" id="verify-success"></p>

      <button type="button" id="back-btn" class="text-[#B7D6C6] text-center w-full mt-6 underline hover:text-white">
        ‚Üê Back to Sign Up
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const signupForm = document.getElementById('signup-form');
    const signupStep = document.getElementById('signup-step');
    const verifyStep = document.getElementById('verify-step');
    const signupError = document.getElementById('signup-error');
    const verifyError = document.getElementById('verify-error');
    const verifySuccess = document.getElementById('verify-success');
    const verifyEmailText = document.getElementById('verify-email');

    let formData = {};
    let isVerified = false;

    // Handle form submission
    signupForm.addEventListener('submit', function (e) {
      if (!isVerified) {
        e.preventDefault();

        // Store form data
        const formElement = e.target;
        formData = {
          firstName: formElement.querySelector('[name="customer[first_name]"]').value,
          lastName: formElement.querySelector('[name="customer[last_name]"]').value,
          email: formElement.querySelector('[name="customer[email]"]').value,
          password: formElement.querySelector('[name="customer[password]"]').value,
        };

        // Validate required fields
        if (!formData.firstName || !formData.lastName || !formData.email || !formData.password) {
          signupError.textContent = 'Please fill in all required fields.';
          return;
        }

        // Show loading state
        document.getElementById('signup-text').classList.add('hidden');
        document.getElementById('signup-loading').classList.remove('hidden');
        signupError.textContent = '';

        // First check if email exists (Mock for testing)
        // Replace this with actual API call
        Promise.resolve({
          json: () => Promise.resolve({ exists: false }), // Change to true to test email exists error
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.exists) {
              document.getElementById('signup-text').classList.remove('hidden');
              document.getElementById('signup-loading').classList.add('hidden');
              signupError.innerHTML =
                'This email address is already associated with an account. If this account is yours, you can <a href="/account/login#recover" class="text-[#FFC801] underline">reset your password</a>';
              return;
            }

            // If email doesn't exist, send OTP (Mock for testing)
            // Replace this with actual API call
            return Promise.resolve({
              json: () =>
                Promise.resolve({
                  success: true,
                  message: 'OTP sent successfully',
                }),
            });
          })
          .then((res) => {
            if (!res) return; // Email already exists case
            return res.json();
          })
          .then((data) => {
            if (!data) return; // Email already exists case

            document.getElementById('signup-text').classList.remove('hidden');
            document.getElementById('signup-loading').classList.add('hidden');

            if (data.success) {
              signupStep.classList.add('hidden');
              verifyStep.classList.remove('hidden');
              verifyEmailText.textContent = formData.email;
              document.getElementById('otp1').focus();
            } else {
              signupError.textContent = data.message || 'Error sending OTP. Please try again.';
            }
          })
          .catch((err) => {
            console.error('Error:', err);
            document.getElementById('signup-text').classList.remove('hidden');
            document.getElementById('signup-loading').classList.add('hidden');
            signupError.textContent = 'Error sending OTP. Please try again.';
          });
      }
      // If verified, form will submit normally to Shopify
    });

    // OTP input handling
    const otpInputs = document.querySelectorAll('[data-otp-digit]');

    otpInputs.forEach((input, index) => {
      input.addEventListener('input', function (e) {
        // Only allow numbers
        const value = e.target.value.replace(/[^0-9]/g, '');
        e.target.value = value;

        if (value.length === 1 && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }

        // Clear error when user starts typing
        verifyError.textContent = '';
        verifySuccess.textContent = '';
      });

      input.addEventListener('keydown', function (e) {
        if (e.key === 'Backspace' && e.target.value === '' && index > 0) {
          otpInputs[index - 1].focus();
        }
      });

      input.addEventListener('paste', function (e) {
        e.preventDefault();
        const paste = (e.clipboardData || window.clipboardData).getData('text');
        const digits = paste.replace(/[^0-9]/g, '').split('');

        digits.forEach((digit, i) => {
          if (otpInputs[index + i]) {
            otpInputs[index + i].value = digit;
          }
        });

        // Focus next empty input
        const nextEmpty = otpInputs.findIndex((input, i) => i >= index && !input.value);
        if (nextEmpty !== -1) {
          otpInputs[nextEmpty].focus();
        }
      });
    });

    // Verify OTP
    document.getElementById('verify-otp-button').addEventListener('click', function () {
      const otp = Array.from(otpInputs)
        .map((input) => input.value)
        .join('');

      if (otp.length !== 6) {
        verifyError.textContent = 'Please enter all 6 digits.';
        return;
      }

      // Show loading state
      document.getElementById('verify-text').classList.add('hidden');
      document.getElementById('verify-loading').classList.remove('hidden');
      verifyError.textContent = '';
      verifySuccess.textContent = '';

      fetch('/apps/simplify-my-login/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          email: formData.email,
          otp: otp,
        }),
      })
        .then((res) => res.json())
        .then((data) => {
          document.getElementById('verify-text').classList.remove('hidden');
          document.getElementById('verify-loading').classList.add('hidden');

          if (data.verified) {
            verifySuccess.textContent = 'Email verified successfully! Creating account...';
            isVerified = true;

            // Update form fields with stored data
            signupForm.querySelector('[name="customer[first_name]"]').value = formData.firstName;
            signupForm.querySelector('[name="customer[last_name]"]').value = formData.lastName;
            signupForm.querySelector('[name="customer[email]"]').value = formData.email;
            signupForm.querySelector('[name="customer[password]"]').value = formData.password;

            // Add hidden field to indicate verification
            const verifiedInput = document.createElement('input');
            verifiedInput.type = 'hidden';
            verifiedInput.name = 'customer[tags]';
            verifiedInput.value = 'email-verified';
            signupForm.appendChild(verifiedInput);

            // Submit form to Shopify
            setTimeout(() => {
              signupForm.submit();
            }, 1000);
          } else {
            verifyError.textContent = data.message || 'Invalid OTP. Please try again.';
            // Clear OTP inputs
            otpInputs.forEach((input) => (input.value = ''));
            otpInputs[0].focus();
          }
        })
        .catch((err) => {
          console.error('Verification error:', err);
          document.getElementById('verify-text').classList.remove('hidden');
          document.getElementById('verify-loading').classList.add('hidden');
          verifyError.textContent = 'Error verifying OTP. Please try again.';
        });
    });

    // Resend OTP
    document.getElementById('resend-btn').addEventListener('click', function () {
      const button = this;
      button.disabled = true;
      button.textContent = 'Sending...';

      fetch('/apps/simplify-my-login/send-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email: formData.email }),
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.success) {
            verifySuccess.textContent = 'OTP resent successfully!';
            verifyError.textContent = '';
          } else {
            verifyError.textContent = data.message || 'Error resending OTP.';
          }
        })
        .catch((err) => {
          console.error('Resend error:', err);
          verifyError.textContent = 'Error resending OTP.';
        })
        .finally(() => {
          button.disabled = false;
          button.textContent = 'Resend';
        });
    });

    // Back to signup
    document.getElementById('back-btn').addEventListener('click', function () {
      verifyStep.classList.add('hidden');
      signupStep.classList.remove('hidden');

      // Clear OTP inputs
      otpInputs.forEach((input) => (input.value = ''));
      verifyError.textContent = '';
      verifySuccess.textContent = '';
      isVerified = false;
    });
  });
</script>
