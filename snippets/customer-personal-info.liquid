 {% form 'customer' %}
  {% if form.errors %}
    <div class="mb-4 p-4 bg-red-100 text-red-700 rounded animate-fadeIn" id="errorAlert">
      <div class="flex items-center">
        <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
        </svg>
        <span>{{ form.errors | default_errors }}</span>
      </div>
    </div>
  {% endif %}

  {% if form.posted_successfully? %}
    <div class="mb-4 p-4 bg-green-100 text-green-700 rounded animate-fadeIn" id="successAlert">
      <div class="flex items-center">
        <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
        </svg>
        <span>Your information has been updated successfully.</span>
      </div>
    </div>
  {% endif %}

  <!-- Hidden field to store customer note (including gender) -->
  <input type="hidden" name="customer[note]" id="customerNote" value="{{ customer.note | escape }}">

  <div class="grid grid-cols-2 gap-4 lg:gap-5 xl:gap-6">
    <!-- First Name -->
    <div class="col-span-2 lg:col-span-1">
      <label class="block text-[#514849] text-lg lg:text-[22px] mb-2 font-medium !leading-[1.25]">First Name*</label>
      <input
        name="customer[first_name]"
        id="firstName"
        placeholder="First Name"
        type="text"
        value="{{ customer.first_name }}"
        required
        class="w-full text-lg lg:text-xl !leading-[1.2] text-[#797375] placeholder:text-[#797375] border lg:border-[1.2px] border-[#E3E2E0] bg-[#FCFBF7] py-4 lg:py-5 px-5 lg:px-6 rounded-lg transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 focus:outline-none"
      >
      <div class="error-message text-red-500 text-sm mt-1 hidden" data-field="firstName"></div>
    </div>

    <!-- Last Name -->
    <div class="col-span-2 lg:col-span-1">
      <label class="block text-[#514849] text-lg lg:text-[22px] mb-2 font-medium !leading-[1.25]">Last Name*</label>
      <input
        name="customer[last_name]"
        id="lastName"
        placeholder="Last Name"
        type="text"
        value="{{ customer.last_name }}"
        required
        class="w-full text-lg lg:text-xl !leading-[1.2] text-[#797375] placeholder:text-[#797375] border lg:border-[1.2px] border-[#E3E2E0] bg-[#FCFBF7] py-4 lg:py-5 px-5 lg:px-6 rounded-lg transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 focus:outline-none"
      >
      <div class="error-message text-red-500 text-sm mt-1 hidden" data-field="lastName"></div>
    </div>

    <!-- Email -->
    <div class="col-span-2">
      <label class="block text-[#514849] text-lg lg:text-[22px] mb-2 font-medium !leading-[1.25]">Email*</label>
      <input
        name="customer[email]"
        id="email"
        placeholder="example@gmail.com"
        type="email"
        value="{{ customer.email }}"
        required
        class="w-full text-lg lg:text-xl !leading-[1.2] text-[#797375] placeholder:text-[#797375] border lg:border-[1.2px] border-[#E3E2E0] bg-[#FCFBF7] py-4 lg:py-5 px-5 lg:px-6 rounded-lg transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 focus:outline-none"
      >
      <div class="error-message text-red-500 text-sm mt-1 hidden" data-field="email"></div>
    </div>

    <!-- Phone -->
    <div class="col-span-2">
      <label class="block text-[#514849] text-lg lg:text-[22px] mb-2 font-medium !leading-[1.25]">Phone</label>
      <input
        name="customer[phone]"
        id="phoneInput"
        placeholder="+1234567890"
        type="tel"
        value="{{ customer.phone | default: '' }}"
        class="w-full text-lg lg:text-xl !leading-[1.2] text-[#797375] placeholder:text-[#797375] border lg:border-[1.2px] border-[#E3E2E0] bg-[#FCFBF7] py-4 lg:py-5 px-5 lg:px-6 rounded-lg transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 focus:outline-none"
      >
      <div class="error-message text-red-500 text-sm mt-1 hidden" data-field="phoneInput"></div>
    </div>

    <!-- Gender -->
    <div class="col-span-2 relative z-1">
      <span
        class="block w-3.5 h-2 rounded-full absolute right-5 lg:right-6 bottom-7 pointer-events-none transition-transform duration-200"
        id="genderArrow"
      >
        <img src="{{'arrow-down.svg' |  asset_url}}" class="size-full" width="14" height="8" alt="Arrow">
      </span>
      <label class="block text-[#514849] text-lg lg:text-[22px] mb-2 font-medium !leading-[1.25]">Gender</label>
      <select
        name="genderSelect"
        id="genderSelect"
        class="w-full border lg:border-[1.2px] border-[#E3E2E0] bg-[#FCFBF7] py-4 lg:py-5 px-5 lg:px-6 appearance-none rounded-lg text-[#797375] text-lg lg:text-xl !leading-[1.2] font-poppins transition-all duration-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 focus:outline-none cursor-pointer"
      >
        <option value="">Select Gender</option>
        <option value="Male">Male</option>
        <option value="Female">Female</option>
        <option value="Other">Other</option>
        <option value="Prefer not to say">Prefer not to say</option>
      </select>
    </div>

    <!-- Submit Button -->
    <div class="col-span-2">
      <button
        type="submit"
        class="btn transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
        id="updateBtn"
      >
        <span class="btn-text">Update Changes</span>
        <span class="btn-loading hidden">
          <svg
            class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Updating...
        </span>
      </button>
    </div>
  </div>
{% endform %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form[action*="customer"]');
    const updateBtn = document.getElementById('updateBtn');
    const btnText = updateBtn.querySelector('.btn-text');
    const btnLoading = updateBtn.querySelector('.btn-loading');

    const firstName = document.getElementById('firstName');
    const lastName = document.getElementById('lastName');
    const email = document.getElementById('email');
    const phoneInput = document.getElementById('phoneInput');
    const genderSelect = document.getElementById('genderSelect');
    const genderArrow = document.getElementById('genderArrow');
    const customerNote = document.getElementById('customerNote');

    // Populate gender from note if exists
    const noteValue = customerNote.value;
    const genderMatch = noteValue.match(/gender:([^\;]+)/);
    if (genderMatch) {
      genderSelect.value = genderMatch[1];
    }

    // Store original values
    const originalValues = {
      firstName: firstName.value,
      lastName: lastName.value,
      email: email.value,
      phoneInput: phoneInput.value,
      genderSelect: genderSelect.value,
    };

    function checkForChanges() {
      const hasChanges =
        firstName.value !== originalValues.firstName ||
        lastName.value !== originalValues.lastName ||
        email.value !== originalValues.email ||
        phoneInput.value !== originalValues.phoneInput ||
        genderSelect.value !== originalValues.genderSelect;
      updateBtn.disabled = !hasChanges;
      return hasChanges;
    }

    [firstName, lastName, email, phoneInput, genderSelect].forEach((f) => {
      f.addEventListener('input', checkForChanges);
      f.addEventListener('change', checkForChanges);
    });

    form.addEventListener('submit', function (e) {
      // Save gender in customer[note]
      const existingNotes = customerNote.value
        .split(';')
        .filter(Boolean)
        .map((n) => n.trim());
      const filteredNotes = existingNotes.filter((n) => !n.startsWith('gender:'));
      if (genderSelect.value) {
        filteredNotes.push(`gender:${genderSelect.value}`);
      }
      customerNote.value = filteredNotes.join('; ');

      updateBtn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
    });
  });
</script> 

